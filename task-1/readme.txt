Така, Web.

Популярни световни организации на темата:
whatwg: https://html.spec.whatwg.org/multipage/
ietf: https://www.ietf.org/
irtf: https://irtf.org/
W3C: https://www.w3.org/ (погледни и https://www.w3.org/People/Berners-Lee/)
iana: https://www.iana.org/
icann: https://www.icann.org/

Малко история по темата за основи:
The Evolution of XML
https://docstore.mik.ua/orelly/xml/xmlnut/ch01_04.htm

A Brief History of JavaScript
https://auth0.com/blog/a-brief-history-of-javascript/

A brief history of CSS until 2016
https://www.w3.org/Style/CSS20/history.html

Brief history of html (and the web in general)
https://html.spec.whatwg.org/multipage/introduction.html#history-2
https://atendesigngroup.com/blog/brief-history-of-html
https://www.w3.org/People/Raggett/book4/ch02.html
HTML в момента е на етап Living Standart, което грубо означава че няма вече версии. Каквото пише на страницата на whatwg, това е.

Няколко важни протокола:
https://en.wikibooks.org/wiki/Network_Plus_Certification/Technologies/Common_Protocols
От тука можеш да изключиш FTP - browser-ите не го поддържат вече, поради липса на сигурност.
Най-важен от всички е HTTP. Всичко останало идва после.

Малко общо обяснения:
Стандартите за Web се пишат от всички. Няма "министерство" на "целия" web. И ти можеш да се включиш, но ще бъдеш никой и никой няма да ти обръща внимание, дори идеите ти да са добри. Има си mailing групи, чат room-ове и т.н.
Решенията се взимат често от производителите на browser-ите, всеки е независим и може в крайна сметка да си прави каквото си иска (което често пъти е причина и другите да правят като него).

Mozilla(производител) има сайт (с кратко име MDN), който е прекрасна документация за програмисти, с много примери и често пъти се цитира в документите на W3C. Адресът му е https://developer.mozilla.org/en-US/

Ти вече си свикнал да учиш сам (всеки сам се бори за себе си) така че няма какво да обяснявам защо ти давам толкова много информация накуп.

Популярни производители на browser-и:
https://www.w3counter.com/globalstats.php
Пращам ти това, да не ги пиша тука всичките - няма смисъл.

HTML validator:
https://validator.w3.org/

Трябва да започваш с нещо, така че ето направо кода на няколко страници, които са празни:
https://www.sitepoint.com/a-basic-html5-template/
https://www.webfx.com/blog/web-design/html5-template/
Тези са малко претрупани, но има подробни обяснения към тях.
Забележи на втория template има доста тагове специално за IE (Internet Explorer) или за мобилните устройства. Само да ти покажа, че standart-изацията е трудна в web програмирането, дори и в днешно време.

Каква е идеята на тези месец, два през които ще си говорим:
Няма смисъл от бързане. Колкото време ти е нужно, толкова отделяй. Питай за всичко, което започва да отнема прекалено много време.

Малко насоки:
Всеки модерен browser има Dev/Web Tools, обикновенно с десен бутон някъде на някоя страница можеш да видиш кода, заедно с огромно количество, предполагам неясна в момента за тебе, информация (състояние на мрежата, заявки, Local storage/cache, JS variables/environment, sandboxing настройки и т.н.) Не се стряскай от много прозорци. Всеки един си има простичка цел.
Примерно, на Firefox, след десен бутон някъде на страницата може да се види опцията "Inspect Element(Q)". На Google Chrome е "Inspect" (Ctrl + Shift + I).


---


Всичко това дотука засяга основно client-side частта, това което се случва на твоята машина.
Web страниците се генерират от web server-и (програми, вървящи на машини, които често пъти също се наричат web server-и) и там се използва c#, php, python, ruby, javascript (тези са най-известните) и други. Може ако искаш и на C++, но ще ти трябва web server, който да го поеме. Всеки server side език си върви със световно известен framework (предварително написани и/или компилирани модули/части/библиотеки), часто пъти написан също на този език - C# = ASP.NET / ASP.NET Core, Ruby = Ruby On Rails, Python = Django и т.н.


---


Първата задача:
Разгледай кода на страницата, на хората които пишат стандарта за CSS:  https://drafts.csswg.org/css-writing-modes-3/#toc
Това е добре написан код. Страницата съм я избрал почти на случаен принцип, но ако ти е интерестно можеш да прочетеш първите няколко абзаца.

Втора задача:
Прочети тази статия. Те отклоняват от темата за програмиране, но показват как добре написан код се използва от машини на практика. (по по-сложен, но подобен начин, Google чете страниците и се опитва да се ориентира къде е "(главното) съдържанието")
https://axesslab.com/what-is-a-screen-reader/

Трета задача:
Тя ще е да направиш страница, която да показва информация в таблица. Ето как се описва една таблица в HTML: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table
Мисли си таблица от състезание по математика - кой (с неговото име) колко точки е получил (на всяка задача и сумарно) и на кое място е в крайната класация.
Няма смисъл, ама крайно няма смисъл, да правиш големи неща. 2 или 3 колони с 2-3 реда дават същия опит като 200-300 подобни/еднакви реда/колони.

Малко съвети:
Това го пиша, само и единствено!, за да съм спокоен че съм го написал. Ако вече имаш изградени такива аналитични навици - идеално.
Разбивай задачата на части. Не се хвърляй да я решаваш веднага или директно. Почти винаги решаването на една задача изисква (много) повече знания от реално приложените за нейното конкретно решение.
Направи първо web страница, която да показва само текст - примерно.
После виж как можеш да пренасяш текст на редове.
После направи една таблица, с една колона и един ред.
И давай нататък.
